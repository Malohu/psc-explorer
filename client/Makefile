#############################################################################
# Makefile for building: client
# Generated by qmake (2.01a) (Qt 4.6.2) on: lun. févr. 25 14:30:30 2013
# Project:  client.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile client.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES) -g -O0 #-Wall `urg-config --cflags` `sdl-config --cflags`
INCPATH       = -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS) -L/usr/lib -lpthread #`urg-config --libs` `sdl-config --libs` -lc
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
LDLIBS = `urg-config --libs` `sdl-config --libs` -lc

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = client.cpp \
		main.cpp \
		motor.cpp \
		telemeter.cpp \
		../commons/pointcloud.cpp \
		../commons/geometry.cpp \
		../commons/point.cpp \
		../commons/pointcloudnode.cpp \
		../commons/instruction.cpp \
		../commons/error.cpp \
		../commons/benchmark.cpp 
OBJECTS       = client.o \
		main.o \
		motor.o \
		telemeter.o \
		pointcloud.o \
		geometry.o \
		point.o \
		pointcloudnode.o \
		instruction.o \
		error.o \
		benchmark.o
QMAKE_TARGET  = client
DESTDIR       = 
TARGET        = client

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

dist: 
	@$(CHK_DIR_EXISTS) .tmp/client1.0.0 || $(MKDIR) .tmp/client1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/client1.0.0/ && $(COPY_FILE) --parents client.h motor.h telemeter.h ../commons/pointcloud.h ../commons/geometry.h ../commons/point.h ../commons/pointcloudnode.h ../commons/instruction.h ../commons/error.h ../commons/benchmark.h .tmp/client1.0.0/ && $(COPY_FILE) --parents client.cpp main.cpp motor.cpp telemeter.cpp ../commons/pointcloud.cpp ../commons/geometry.cpp ../commons/point.cpp ../commons/pointcloudnode.cpp ../commons/instruction.cpp ../commons/error.cpp ../commons/benchmark.cpp .tmp/client1.0.0/ && (cd `dirname .tmp/client1.0.0` && $(TAR) client1.0.0.tar client1.0.0 && $(COMPRESS) client1.0.0.tar) && $(MOVE) `dirname .tmp/client1.0.0`/client1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/client1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

client.o: client.cpp client.h \
		../commons/pointcloud.h \
		../commons/geometry.h \
		../commons/point.h \
		../commons/pointcloudnode.h \
		../commons/instruction.h \
		../commons/error.h \
		telemeter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o client.o client.cpp

main.o: main.cpp client.h \
		../commons/pointcloud.h \
		../commons/geometry.h \
		../commons/point.h \
		../commons/pointcloudnode.h \
		../commons/instruction.h \
		../commons/error.h \
		telemeter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

motor.o: motor.cpp motor.h \
		../commons/geometry.h \
		../commons/point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o motor.o motor.cpp

telemeter.o: telemeter.cpp telemeter.h \
		../commons/point.h \
		../commons/geometry.h \
		../commons/benchmark.h \
		../commons/pointcloudnode.h \
		../commons/pointcloud.h \
		../commons/error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o telemeter.o telemeter.cpp

pointcloud.o: ../commons/pointcloud.cpp ../commons/pointcloud.h \
		../commons/geometry.h \
		../commons/point.h \
		../commons/pointcloudnode.h \
		../commons/error.h \
		../commons/benchmark.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pointcloud.o ../commons/pointcloud.cpp

geometry.o: ../commons/geometry.cpp ../commons/geometry.h \
		../commons/point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o geometry.o ../commons/geometry.cpp

point.o: ../commons/point.cpp ../commons/point.h \
		../commons/geometry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o point.o ../commons/point.cpp

pointcloudnode.o: ../commons/pointcloudnode.cpp ../commons/pointcloudnode.h \
		../commons/geometry.h \
		../commons/point.h \
		../commons/pointcloud.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pointcloudnode.o ../commons/pointcloudnode.cpp

instruction.o: ../commons/instruction.cpp ../commons/instruction.h \
		../commons/error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o instruction.o ../commons/instruction.cpp

error.o: ../commons/error.cpp ../commons/error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o error.o ../commons/error.cpp

benchmark.o: ../commons/benchmark.cpp ../commons/benchmark.h \
		../commons/geometry.h \
		../commons/point.h \
		../commons/pointcloudnode.h \
		../commons/pointcloud.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o benchmark.o ../commons/benchmark.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

